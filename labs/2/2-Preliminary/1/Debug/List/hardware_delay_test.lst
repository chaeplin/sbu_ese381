###############################################################################
#
# IAR C/C++ Compiler V6.70.1.929 for Atmel AVR            23/Feb/2016  19:45:33
# Copyright 1996-2015 IAR Systems AB.
# Standalone license - IAR Embedded Workbench 4K Kickstart edition for Atmel AVR 6.70
#
#    Source file  =  G:\labs\2\2-PRELIMINARY\1\hardware_delay_test.c
#    Command line =  
#        G:\labs\2\2-PRELIMINARY\1\hardware_delay_test.c --cpu=m128 -ms -o
#        G:\labs\2\2-Preliminary\1\Debug\Obj -lCN
#        G:\labs\2\2-Preliminary\1\Debug\List -y --initializers_in_flash
#        --no_cse --no_inline --no_code_motion --no_cross_call --no_clustering
#        --no_tbaa --debug -DENABLE_BIT_DEFINITIONS -e --eeprom_size 4096
#        --clib -On
#    List file    =  
#        G:\labs\2\2-Preliminary\1\Debug\List\hardware_delay_test.lst
#    Object file  =  
#        G:\labs\2\2-Preliminary\1\Debug\Obj\hardware_delay_test.r90
#
###############################################################################

G:\labs\2\2-PRELIMINARY\1\hardware_delay_test.c
      1          /*
      2          NAME:	hardware_delay_test
      3          AUTHOR:	B. Jarnagin
      4          REV:	- >020160223
      5          DESCRIPTION:	Creates a 1 ms wide pulse on OC0 pin
      6          				Interrupt controlled
      7          TARGET:	ATMEGA128 @ 16 MHz
      8          USES:	TC0, pin OC0
      9          */
     10          
     11          #include <iom128.h>         //Atmega128 definitions

   \                                 In  segment ABSOLUTE, at 0x37
   \   union <unnamed> volatile __io _A_DDRB
   \                     _A_DDRB:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x38
   \   union <unnamed> volatile __io _A_PORTB
   \                     _A_PORTB:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x52
   \   union <unnamed> volatile __io _A_TCNT0
   \                     _A_TCNT0:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x53
   \   union <unnamed> volatile __io _A_TCCR0
   \                     _A_TCCR0:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x57
   \   union <unnamed> volatile __io _A_TIMSK
   \                     _A_TIMSK:
   \   00000000                      DS8 1
     12          #include <intrinsics.h>     //Intrinsic functions
     13          #include <avr_macros.h>     //Useful macros
     14          
     15          // COUNTER IN NORMAL MODE WITH CLK/64

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
     16          const char COUNTER_MODE = (1 << CS01) | (1 << CS00);
   \                     COUNTER_MODE:
   \   00000000                      DS8 1
   \   00000001                      REQUIRE `?<Initializer for COUNTER_MODE>`
     17          
     18          // COUNTER WILL RUN FOR 1 ms = 64*(16E-6 sec)*(255-5)

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
     19          const char DELAY_POSITION = 5;
   \                     DELAY_POSITION:
   \   00000000                      DS8 1
   \   00000001                      REQUIRE `?<Initializer for DELAY_POSITION>`
     20          
     21          #define OC0 4
     22          

   \                                 In  segment CODE, align 2, keep-with-next
     23          void main(){
   \                     main:
     24          	// SETUP PIN OC0 FOR OUTPUT
     25          	DDRB = (1 << OC0);
   \   00000000   E100               LDI     R16, 16
   \   00000002   BB07               OUT     0x17, R16
     26          	
     27          	// SETUP INTERRUPT FOR OVERFLOW
     28          	TIMSK = (1 << TOIE0);
   \   00000004   E001               LDI     R16, 1
   \   00000006   BF07               OUT     0x37, R16
     29          	
     30          	// LOAD VALUE FOR COUNTER
     31          	TCNT0 = DELAY_POSITION;
   \   00000008   9100....           LDS     R16, DELAY_POSITION
   \   0000000C   BF02               OUT     0x32, R16
     32          	
     33          	// BEGIN PULSE
     34          	SETBIT(PORTB, OC0);
   \   0000000E   9AC4               SBI     0x18, 0x04
     35          	
     36          	// SETUP COUNTER PRESCALER/MODE
     37          	TCCR0 = COUNTER_MODE;
   \   00000010   9100....           LDS     R16, COUNTER_MODE
   \   00000014   BF03               OUT     0x33, R16
     38          	
     39          	__enable_interrupt();
   \   00000016   9478               SEI
     40          	
     41          	// ENTER CAPTURE LOOP, DONE WITH SETUP
     42          	while(1);
   \                     ??main_0:
   \   00000018   CFFF               RJMP    ??main_0
   \   0000001A                      REQUIRE _A_DDRB
   \   0000001A                      REQUIRE _A_TIMSK
   \   0000001A                      REQUIRE _A_TCNT0
   \   0000001A                      REQUIRE _A_PORTB
   \   0000001A                      REQUIRE _A_TCCR0
     43          }
     44          
     45          #pragma vector=TIMER0_OVF_vect

   \                                 In  segment CODE, align 2, keep-with-next
     46          __interrupt void isr_TOV0(void){
   \                     isr_TOV0:
   \   00000000   932A               ST      -Y, R18
   \   00000002   931A               ST      -Y, R17
   \   00000004   930A               ST      -Y, R16
   \   00000006   B71F               IN      R17, 0x3F
   \   00000008   B72B               IN      R18, 0x3B
     47          	// DISABLE COUNTER
     48          	TCCR0 = 0;
   \   0000000A   E000               LDI     R16, 0
   \   0000000C   BF03               OUT     0x33, R16
     49          	
     50          	// END PULSE
     51          	// CLEARBIT(PORTB, OC0);
     52          }
   \   0000000E   BF2B               OUT     0x3B, R18
   \   00000010   BF1F               OUT     0x3F, R17
   \   00000012   9109               LD      R16, Y+
   \   00000014   9119               LD      R17, Y+
   \   00000016   9129               LD      R18, Y+
   \   00000018   9518               RETI
   \   0000001A                      REQUIRE _A_TCCR0

   \                                 In  segment INTVEC, offset 0x40, root
   \                     `??isr_TOV0::??INTVEC 64`:
   \   00000040   ........           JMP     isr_TOV0

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for COUNTER_MODE>`:
   \   00000000   03                 DC8 3

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for DELAY_POSITION>`:
   \   00000000   05                 DC8 5

   Maximum stack usage in bytes:

   CSTACK RSTACK Function
   ------ ------ --------
      3      2   isr_TOV0
      0      2   main


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       1  ?<Initializer for COUNTER_MODE>
       1  ?<Initializer for DELAY_POSITION>
       1  COUNTER_MODE
       1  DELAY_POSITION
       1  _A_DDRB
       1  _A_PORTB
       1  _A_TCCR0
       1  _A_TCNT0
       1  _A_TIMSK
      26  isr_TOV0
       4  isr_TOV0::??INTVEC 64
      26  main
       7  -- Other

 
  5 bytes in segment ABSOLUTE
 52 bytes in segment CODE
  7 bytes in segment INITTAB
  4 bytes in segment INTVEC
  2 bytes in segment NEAR_I
  2 bytes in segment NEAR_ID
 
 54 bytes of CODE memory (+ 11 bytes shared)
  2 bytes of DATA memory (+  5 bytes shared)

Errors: none
Warnings: none
