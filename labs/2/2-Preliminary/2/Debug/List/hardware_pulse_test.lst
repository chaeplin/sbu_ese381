###############################################################################
#
# IAR C/C++ Compiler V6.70.1.929 for Atmel AVR            23/Feb/2016  19:53:24
# Copyright 1996-2015 IAR Systems AB.
# Standalone license - IAR Embedded Workbench 4K Kickstart edition for Atmel AVR 6.70
#
#    Source file  =  G:\labs\2\2-PRELIMINARY\2\hardware_pulse_test.c
#    Command line =  
#        G:\labs\2\2-PRELIMINARY\2\hardware_pulse_test.c --cpu=m128 -ms -o
#        G:\labs\2\2-Preliminary\2\Debug\Obj -lCN
#        G:\labs\2\2-Preliminary\2\Debug\List -y --initializers_in_flash
#        --no_cse --no_inline --no_code_motion --no_cross_call --no_clustering
#        --no_tbaa --debug -DENABLE_BIT_DEFINITIONS -e --eeprom_size 4096
#        --clib -On
#    List file    =  
#        G:\labs\2\2-Preliminary\2\Debug\List\hardware_pulse_test.lst
#    Object file  =  
#        G:\labs\2\2-Preliminary\2\Debug\Obj\hardware_pulse_test.r90
#
###############################################################################

G:\labs\2\2-PRELIMINARY\2\hardware_pulse_test.c
      1          /*
      2          NAME:	hardware_pulse_test
      3          AUTHOR:	B. Jarnagin
      4          REV:	- >020160223
      5          DESCRIPTION:	Creates a 400 us wide pulse on OC0 pin followed by a ~1000 us delay repeat
      6          				Interrupt controlled
      7          TARGET:	ATMEGA128 @ 16 MHz
      8          USES:	TC0, pin OC0
      9          */
     10          
     11          #include <iom128.h>         //Atmega128 definitions

   \                                 In  segment ABSOLUTE, at 0x37
   \   union <unnamed> volatile __io _A_DDRB
   \                     _A_DDRB:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x38
   \   union <unnamed> volatile __io _A_PORTB
   \                     _A_PORTB:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x52
   \   union <unnamed> volatile __io _A_TCNT0
   \                     _A_TCNT0:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x53
   \   union <unnamed> volatile __io _A_TCCR0
   \                     _A_TCCR0:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x57
   \   union <unnamed> volatile __io _A_TIMSK
   \                     _A_TIMSK:
   \   00000000                      DS8 1
     12          #include <intrinsics.h>     //Intrinsic functions
     13          #include <avr_macros.h>     //Useful macros
     14          
     15          // COUNTER IN NORMAL MODE WITH CLK/64 

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
     16          const char COUNTER_MODE = (1 << CS01) | (1 << CS00);
   \                     COUNTER_MODE:
   \   00000000                      DS8 1
   \   00000001                      REQUIRE `?<Initializer for COUNTER_MODE>`
     17          
     18          // COUNTER WILL RUN FOR 400 us = 64*(16E-6 sec)*(255-100)

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
     19          const char DELAY_POSITION = 155;
   \                     DELAY_POSITION:
   \   00000000                      DS8 1
   \   00000001                      REQUIRE `?<Initializer for DELAY_POSITION>`
     20          
     21          // PIN B 4 is OC0
     22          #define OC0 4
     23          

   \                                 In  segment CODE, align 2, keep-with-next
     24          void main(){
   \                     main:
     25          	// SETUP PIN OC0 FOR OUTPUT
     26          	DDRB = (1 << OC0);
   \   00000000   E100               LDI     R16, 16
   \   00000002   BB07               OUT     0x17, R16
     27          	
     28          	// SETUP INTERRUPT FOR OVERFLOW
     29          	TIMSK = (1 << TOIE0);
   \   00000004   E001               LDI     R16, 1
   \   00000006   BF07               OUT     0x37, R16
     30          	
     31          	// LOAD VALUE FOR COUNTER
     32          	TCNT0 = DELAY_POSITION;
   \   00000008   9100....           LDS     R16, DELAY_POSITION
   \   0000000C   BF02               OUT     0x32, R16
     33          	
     34          	// SETUP COUNTER PRESCALER/MODE
     35          	TCCR0 = COUNTER_MODE;
   \   0000000E   9100....           LDS     R16, COUNTER_MODE
   \   00000012   BF03               OUT     0x33, R16
     36          	__enable_interrupt();
   \   00000014   9478               SEI
     37          	
     38          	// ENTER CAPTURE LOOP, DONE WITH SETUP
     39          	while(1);
   \                     ??main_0:
   \   00000016   CFFF               RJMP    ??main_0
   \   00000018                      REQUIRE _A_DDRB
   \   00000018                      REQUIRE _A_TIMSK
   \   00000018                      REQUIRE _A_TCNT0
   \   00000018                      REQUIRE _A_TCCR0
     40          }
     41          
     42          #pragma vector=TIMER0_OVF_vect

   \                                 In  segment CODE, align 2, keep-with-next
     43          __interrupt void isr_TOV0(void){
   \                     isr_TOV0:
   \   00000000   933A               ST      -Y, R19
   \   00000002   932A               ST      -Y, R18
   \   00000004   931A               ST      -Y, R17
   \   00000006   930A               ST      -Y, R16
   \   00000008   B72F               IN      R18, 0x3F
   \   0000000A   B73B               IN      R19, 0x3B
     44          	//DISABLE COUNTER
     45          	TCCR0 = 0;
   \   0000000C   E000               LDI     R16, 0
   \   0000000E   BF03               OUT     0x33, R16
     46          	
     47          	// TURN OFF PIN
     48          	// CLEARBIT(PORTB, OC0);
     49          	
     50          	// LOAD VALUE FOR COUNTER
     51          	TCNT0 = DELAY_POSITION;
   \   00000010   9100....           LDS     R16, DELAY_POSITION
   \   00000014   BF02               OUT     0x32, R16
     52          	
     53          	// DELAY FOR 1000 us = (16E-6) * 16000
     54          	__delay_cycles(16000);
   \   00000016   E90F               LDI     R16, 159
   \   00000018   E01F               LDI     R17, 15
   \   0000001A   5001               SUBI    R16, 1
   \   0000001C   4010               SBCI    R17, 0
   \   0000001E   F7E9               BRNE    $-4
   \   00000020   C000               RJMP    $+2
   \   00000022   0000               NOP
     55          	
     56          	// TURN ON PIN
     57          	SETBIT(PORTB, OC0);
   \   00000024   9AC4               SBI     0x18, 0x04
     58          	
     59          	// SETUP COUNTER PRESCALER/MODE
     60          	TCCR0 = COUNTER_MODE;
   \   00000026   9100....           LDS     R16, COUNTER_MODE
   \   0000002A   BF03               OUT     0x33, R16
     61          }
   \   0000002C   BF3B               OUT     0x3B, R19
   \   0000002E   BF2F               OUT     0x3F, R18
   \   00000030   9109               LD      R16, Y+
   \   00000032   9119               LD      R17, Y+
   \   00000034   9129               LD      R18, Y+
   \   00000036   9139               LD      R19, Y+
   \   00000038   9518               RETI
   \   0000003A                      REQUIRE _A_TCCR0
   \   0000003A                      REQUIRE _A_TCNT0
   \   0000003A                      REQUIRE _A_PORTB

   \                                 In  segment INTVEC, offset 0x40, root
   \                     `??isr_TOV0::??INTVEC 64`:
   \   00000040   ........           JMP     isr_TOV0

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for COUNTER_MODE>`:
   \   00000000   03                 DC8 3

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for DELAY_POSITION>`:
   \   00000000   9B                 DC8 155

   Maximum stack usage in bytes:

   CSTACK RSTACK Function
   ------ ------ --------
      4      2   isr_TOV0
      0      2   main


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       1  ?<Initializer for COUNTER_MODE>
       1  ?<Initializer for DELAY_POSITION>
       1  COUNTER_MODE
       1  DELAY_POSITION
       1  _A_DDRB
       1  _A_PORTB
       1  _A_TCCR0
       1  _A_TCNT0
       1  _A_TIMSK
      58  isr_TOV0
       4  isr_TOV0::??INTVEC 64
      24  main
       7  -- Other

 
  5 bytes in segment ABSOLUTE
 82 bytes in segment CODE
  7 bytes in segment INITTAB
  4 bytes in segment INTVEC
  2 bytes in segment NEAR_I
  2 bytes in segment NEAR_ID
 
 84 bytes of CODE memory (+ 11 bytes shared)
  2 bytes of DATA memory (+  5 bytes shared)

Errors: none
Warnings: none
