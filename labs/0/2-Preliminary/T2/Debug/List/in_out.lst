###############################################################################
#
# IAR C/C++ Compiler V6.70.1.929 for Atmel AVR            29/Jan/2016  02:06:45
# Copyright 1996-2015 IAR Systems AB.
# Standalone license - IAR Embedded Workbench 4K Kickstart edition for Atmel AVR 6.70
#
#    Source file  =  G:\labs\0\2-PRELIMINARY\T2\in_out.c
#    Command line =  
#        G:\labs\0\2-PRELIMINARY\T2\in_out.c --cpu=m128 -ms -o
#        G:\labs\0\2-Preliminary\T2\Debug\Obj -lCN
#        G:\labs\0\2-Preliminary\T2\Debug\List -y --initializers_in_flash
#        --no_cse --no_inline --no_code_motion --no_cross_call --no_clustering
#        --no_tbaa --debug -DENABLE_BIT_DEFINITIONS -e --eeprom_size 4096
#        --clib -On
#    List file    =  G:\labs\0\2-Preliminary\T2\Debug\List\in_out.lst
#    Object file  =  G:\labs\0\2-Preliminary\T2\Debug\Obj\in_out.r90
#
###############################################################################

G:\labs\0\2-PRELIMINARY\T2\in_out.c
      1          
      2          /*
      3           *  inout.c -  A simple program to continuously input a byte from
      4           *              Switches(PORTD) and output the byte to LEDS(PORTB).
      5           */
      6          
      7          #include <iom128.h> //File with register addresses for ATmega128

   \                                 In  segment ABSOLUTE, at 0x30
   \   union <unnamed> volatile __io _A_PIND
   \                     _A_PIND:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x31
   \   union <unnamed> volatile __io _A_DDRD
   \                     _A_DDRD:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x32
   \   union <unnamed> volatile __io _A_PORTD
   \                     _A_PORTD:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x37
   \   union <unnamed> volatile __io _A_DDRB
   \                     _A_DDRB:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x38
   \   union <unnamed> volatile __io _A_PORTB
   \                     _A_PORTB:
   \   00000000                      DS8 1
      8          

   \                                 In  segment CODE, align 2, keep-with-next
      9          int main(void)
   \                     main:
     10          {
     11            char temp;        //byte read. unsigned char by default.
     12          
     13            DDRB = 0xFF;    //PORTB - all bits configured as outputs.
   \   00000000   EF0F               LDI     R16, 255
   \   00000002   BB07               OUT     0x17, R16
     14            DDRD = 0x00;    //PORTD - all bits configured as inputs.
   \   00000004   E000               LDI     R16, 0
   \   00000006   BB01               OUT     0x11, R16
     15            PORTD =0xFF;    //PORTD enable pullups
   \   00000008   EF0F               LDI     R16, 255
   \   0000000A   BB02               OUT     0x12, R16
     16          
     17            while(1) {
     18              temp = PIND;    //Input byte from SWITCHES.
   \                     ??main_0:
   \   0000000C   B300               IN      R16, 0x10
   \   0000000E   2F10               MOV     R17, R16
     19              temp = ~temp;   //Complement to drive LEDS
   \   00000010   9510               COM     R17
     20              PORTB = temp;   //Output byte to LEDS.
   \   00000012   BB18               OUT     0x18, R17
   \   00000014   CFFB               RJMP    ??main_0
   \   00000016                      REQUIRE _A_DDRB
   \   00000016                      REQUIRE _A_DDRD
   \   00000016                      REQUIRE _A_PORTD
   \   00000016                      REQUIRE _A_PIND
   \   00000016                      REQUIRE _A_PORTB
     21            }
     22          }

   Maximum stack usage in bytes:

   RSTACK Function
   ------ --------
      2   main


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       1  _A_DDRB
       1  _A_DDRD
       1  _A_PIND
       1  _A_PORTB
       1  _A_PORTD
      22  main

 
  5 bytes in segment ABSOLUTE
 22 bytes in segment CODE
 
 22 bytes of CODE memory
  0 bytes of DATA memory (+ 5 bytes shared)

Errors: none
Warnings: none
