###############################################################################
#
# IAR C/C++ Compiler V6.70.1.929 for Atmel AVR            29/Jan/2016  02:06:46
# Copyright 1996-2015 IAR Systems AB.
# Standalone license - IAR Embedded Workbench 4K Kickstart edition for Atmel AVR 6.70
#
#    Source file  =  G:\labs\0\2-Preliminary\T3\sws_lvl.c
#    Command line =  
#        G:\labs\0\2-Preliminary\T3\sws_lvl.c --cpu=m128 -ms -o
#        G:\labs\0\2-Preliminary\T3\Debug\Obj -lCN
#        G:\labs\0\2-Preliminary\T3\Debug\List -y --initializers_in_flash
#        --no_cse --no_inline --no_code_motion --no_cross_call --no_clustering
#        --no_tbaa --debug -DENABLE_BIT_DEFINITIONS -e --eeprom_size 4096
#        --clib -On
#    List file    =  G:\labs\0\2-Preliminary\T3\Debug\List\sws_lvl.lst
#    Object file  =  G:\labs\0\2-Preliminary\T3\Debug\Obj\sws_lvl.r90
#
###############################################################################

G:\labs\0\2-Preliminary\T3\sws_lvl.c
      1          /*
      2           *  sws_level.c -  Simple program to input byte from Switches(PORTD)
      3           *   count the number of 1s and output the count as a level to LEDS(PORTB).
      4           */
      5          #include <iom128.h>

   \                                 In  segment ABSOLUTE, at 0x30
   \   union <unnamed> volatile __io _A_PIND
   \                     _A_PIND:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x31
   \   union <unnamed> volatile __io _A_DDRD
   \                     _A_DDRD:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x32
   \   union <unnamed> volatile __io _A_PORTD
   \                     _A_PORTD:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x37
   \   union <unnamed> volatile __io _A_DDRB
   \                     _A_DDRB:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x38
   \   union <unnamed> volatile __io _A_PORTB
   \                     _A_PORTB:
   \   00000000                      DS8 1
      6          

   \                                 In  segment CODE, align 2, keep-with-next
      7          int main(void)
   \                     main:
      8          {
      9            unsigned char switches, leds, i;   //unsigned byte variables.
     10          
     11            DDRD = 0x00;    //PORTD - all bits configured as inputs.
   \   00000000   E010               LDI     R17, 0
   \   00000002   BB11               OUT     0x11, R17
     12            PORTD = 0xFF;   //PORTD - internal pull-ups enabled.
   \   00000004   EF1F               LDI     R17, 255
   \   00000006   BB12               OUT     0x12, R17
     13            DDRB = 0xFF;    //PORTB - all bits configured as outputs.
   \   00000008   EF1F               LDI     R17, 255
   \   0000000A   BB17               OUT     0x17, R17
     14          
     15            while(1) {
     16              switches = PIND;    //Input byte from SWITCHES.
   \                     ??main_0:
   \   0000000C   B310               IN      R17, 0x10
   \   0000000E   2F31               MOV     R19, R17
     17              leds = 0x00;  //Initialize leds to 0
   \   00000010   E020               LDI     R18, 0
     18              
     19              for (i = 1; i < 9; i++, switches >>= 1)
   \   00000012   E001               LDI     R16, 1
   \                     ??main_1:
   \   00000014   3009               CPI     R16, 9
   \   00000016   F440               BRCC    ??main_2
     20              {
     21                if (switches & 0x01)
   \   00000018   FB30               BST     R19, 0
   \   0000001A   F41E               BRTC    ??main_3
     22                {
     23                  leds <<= 1;
   \   0000001C   0F22               LSL     R18
     24                  leds |= 0x01;
   \   0000001E   6021               ORI     R18, 0x01
   \   00000020   E011               LDI     R17, 1
     25                }
     26              }
   \                     ??main_3:
   \   00000022   9503               INC     R16
   \   00000024   9536               LSR     R19
   \   00000026   CFF6               RJMP    ??main_1
     27              leds = ~leds;
   \                     ??main_2:
   \   00000028   9520               COM     R18
     28              PORTB = leds;   //Output byte to LEDS.
   \   0000002A   BB28               OUT     0x18, R18
   \   0000002C   CFEF               RJMP    ??main_0
   \   0000002E                      REQUIRE _A_DDRD
   \   0000002E                      REQUIRE _A_PORTD
   \   0000002E                      REQUIRE _A_DDRB
   \   0000002E                      REQUIRE _A_PIND
   \   0000002E                      REQUIRE _A_PORTB
     29            }
     30          }

   Maximum stack usage in bytes:

   RSTACK Function
   ------ --------
      2   main


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       1  _A_DDRB
       1  _A_DDRD
       1  _A_PIND
       1  _A_PORTB
       1  _A_PORTD
      46  main

 
  5 bytes in segment ABSOLUTE
 46 bytes in segment CODE
 
 46 bytes of CODE memory
  0 bytes of DATA memory (+ 5 bytes shared)

Errors: none
Warnings: none
